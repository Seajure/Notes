#+TITLE: Seajure Meetup Notes
#+AUTHOR: Seajure
#+EMAIL: seajure@pobox.com
#+OPTIONS: toc:3 num:nil
#+STYLE: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-light.min.css" />

* Intro

These are notes from our meetups. If we talk about a good tool or
library, I'll try and add a link here. Feel free to add your own
notes.

* February 2015
  We tried to create a simple web application that echo's messages
  (dare I say, a "twitter clone"?...well, not even close, actually.)

  Code is at https://github.com/Seajure/echo.

  Below is a snippet I saved from an earlier attempt:

  #+BEGIN_SRC clojure

  (defonce hollas (atom []))

  (defn layout [title & body]
    (html5
     [:head
      [:meta {:charset "UTF-8"}]
      [:title title]]
     [:body
      [:div.container {}
       body]]))

  (defn holla-form []
    (form/form-to [:post "/"]
                  (form/label "holla" "What do you want to holler?")
                  (form/text-area "holla")
                  (form/submit-button "Holla!")))

  (defn display-hollas [hollas]
    [:ul
     (for [holla hollas]
       [:li {} holla])])

  (defn index []
    (layout "Holla"
            (holla-form)
            [:div {:class "clear"}]
            (display-hollas @hollas)))

  (defn add-holla [holla]
    (swap! hollas conj holla)
    (index))

  (defroutes routes
    (GET "/" [] (index))
    (POST "/" [holla] (add-holla holla)))

  (def app (handler/site routes))

  (defn start [port]
    (ring/run-jetty app {:port port :join? false}))

  (defn -main []
    (let [port (Integer. (or (System/getenv "PORT") "8080"))]
      (start port)))



  #+END_SRC

* March 2015

  We're planning on going over Marcus M's Star Trek port.

  - [[http://www.reddit.com/r/Clojure/comments/2x6gce/ported_the_classic_startrek_game_to_clojure/][Reddit discussion]]
  - https://github.com/marcusm/startrek-clojure
  - I've forked it into [[https://github.com/Seajure/startrek-clojure][the org]], in case we make any changes we want to keep.
  - UPDATE: I committed the changes we made, if anyone wants to see them.

** Links
   - [[http://puzzles.com/products/RushHour/RHfromMarkRiedel/Jam.html][Rush Hour game]] like the one Mark Engelberg made.
   - [[http://www.pluralsight.com/courses/description/functional-programming-clojure][Phil's Peep Code video]], which covers making a game in clojure.
   - [[http://stevelosh.com/blog/2012/07/caves-of-clojure-01/][Caves of Clojure]]
   - [[http://www.braveclojure.com/][Clojure for the Brave and True]]
   - [[https://github.com/clojure/tools.trace][clojure.tools.trace]]
   - [[https://github.com/AlexBaranosky/print-foo][print-foo]]
   - [[https://github.com/stuartsierra/component][Stuart Sierra's Component project on github]]
   - [[http://thinkrelevance.com/blog/2013/06/04/clojure-workflow-reloaded]["My Clojure Workflow, Reloaded", Stuart Sierra's Blog]]

